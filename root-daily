#!/bin/sh
#
# simple script to log disk and memory usage on the local system
# as well as other things

LOG="/home/viyadep/daily.log"
TMPD="/tmp/daily.today"
NOW="/home/viyadep/checkstatus.now"

# first, clean space in /dmo1/prod/temp and /dmo1/dev/temp and /analytics1:
if [ "$HOSTNAME" == "sasdevcontrollerrhelsr01.corp.local" ]; then
    /bin/find /dmo1/prod/temp -name ".nfs*" -mtime +1 -exec rm -f {} \;
    /bin/find /dmo1/dev/temp  -name ".nfs*" -mtime +1 -exec rm -f {} \;
    /bin/find /analytics1     -name ".nfs*" -mtime +1 -exec rm -f {} \;
fi

# then, if we are one of the microservers, run the cleanwork process:
echo ${HOSTNAME} | grep -q 'micro' 
if [ $? -eq 0 ]; then
#    /opt/sas/spre/home/SASFoundation/utilities/bin/cleanwork  -v /opt/sas/viya/config/var/tmp
    /root/bin/daily_cleanup.sh
fi

echo -n "$HOSTNAME: " >${TMPD}
date    >>${TMPD}
w       >>${TMPD}
echo    >>${TMPD}
free -m >>${TMPD}
echo    >>${TMPD}

df -h / /opt/sas /sastmp /sasdata /dmo1 /analytics1 >>${TMPD}
echo    >>${TMPD}
ifconfig ens192 >>${TMPD}
echo    >>${TMPD}

## keep an eye on auditcli, if it's there:
#if [ -d /opt/sas/viya/config/var/cache/auditcli ]; then
#      echo "auditcli check:" >>${TMPD}
#      ls -l /opt/sas/viya/config/var/cache/auditcli >>${TMPD}
#      echo >>${TMPD}
#fi

/home/viyadep/bin/sysping >>${TMPD}
echo    >>${TMPD}

# --- send sas-viya-all-services status to checkstatus.now:
service sas-viya-all-services status >${NOW}

# --- see if anyone is down:
echo -n "services check: " >>${TMPD}
grep -q 'down' ${NOW}
if [ $? -eq 0 ]; then
    echo "some services are DOWN:" >>${TMPD}
    grep -i 'down' ${NOW} >>${TMPD}
else
    echo "OK" >>${TMPD}
fi

echo >>${TMPD}

# --- make sure the automate agent is running:
if [ -d /opt/automate-agent ]; then
    RES=`ps ax | grep "DagentLog=logs/agent.log" | wc -l`
    if [ "${RES}" == "2" ]; then
        echo "automate agent is running" >>${TMPD}
    else
        echo "automate agent is NOT running" >>${TMPD}
    fi
fi
echo >>${TMPD}

echo    >>${TMPD}
echo "-------------------------------------------------------------------------------------------" >>${TMPD}
echo    >>${TMPD}

# --- add new daily output to daily.log:
cat ${TMPD} >>${LOG}

# --- change ownership of the ${NOW} file:
chown viyadep.viyadep ${NOW}

# --- send the new output to the main destination:
mail -s "daily report from $HOSTNAME" viyadep@sasdevcontrollerrhelsr01 <${TMPD}
rm -f ${TMPD}

# --- other things:
if [ -d /home/viyadep/incoming/work ]; then
    YESTERDAY=`date -d 'yesterday' '+%Y-%m-%d'`
    LOGFILECOUNT=`ls /analytics1/logs | grep stillwell1-${YESTERDAY} | wc -l`
    FILES=`/usr/bin/find /analytics1/logs -name stillwell1-${YESTERDAY}*`
    OUT="/home/viyadep/incoming/work/stillwell.out"
    FAIL=0

    for f in ${FILES}; do
        grep -q 'Exit code: 0' ${f}
        if [ $? -ne 0 ]; then
            FAIL=1
            echo "the twice-daily Stillwell1.bat file failed on SASOA.corp.local on ${YESTERDAY}:" >>${OUT}
            echo "${f} failed" >>${OUT}
            echo >>${OUT}
        fi
    done

    if [ ${LOGFILECOUNT} -lt 2 ]; then
        echo "Stillwell1.bat ran ${LOGFILECOUNT} time(s) on ${YESTERDAY}:" >>${OUT}
        echo 'ls /analytics1/logs/stillwell1-${YESTERDAY}*:' >>${OUT}
        ls /analytics1/logs/stillwell1-${YESTERDAY}* >>${OUT}
        echo >>${OUT}
    elif [ ${FAIL} -eq 0 ]; then
        echo "Stillwell1.bat ran successfully on ${YESTERDAY}" >>${OUT}
    else
        echo "Stillwell1.bat failure ${YESTERDAY}" >>${OUT}
    fi

    chown viyadep.viyadep ${OUT}
fi

# EOF:
